---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: -=app_name=--redis
  name: -=app_name=--redis
  namespace: -=kubernetes_namespace=-
spec:
  replicas: 1
  selector:
    matchLabels:
      app: -=app_name=--redis
  template:
    metadata:
      labels:
        app: -=app_name=--redis
    spec:
      containers:
      - name: -=app_name=--redis
        image: -=redis_docker_image=-
        ports:
        - containerPort: -=redis_port=-
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: -=redis_port=-
          initialDelaySeconds: -=redis_initial_delay_seconds=-
          periodSeconds: -=redis_period_seconds=-
        env:
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
        #envFrom:
        #  - secretRef:
        #      name: -=app_name=--redis-secret

---
apiVersion: v1
kind: Service
metadata:
  namespace: -=kubernetes_namespace=-
  name: -=app_name=--redis
spec:
  selector:
    app: -=app_name=--redis
  ports:
    - protocol: TCP
      port: -=redis_port=-
      targetPort: -=redis_port=-
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: -=app_name=-
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  replicas: -=replicas=-
  selector:
    matchLabels:
      app: -=app_name=-
  minReadySeconds: -=min_ready_seconds=-
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: -=max_unavailable=-
      maxSurge: -=max_surge=-
  template:
    metadata:
      labels:
        app: -=app_name=-
    spec:
      volumes:
        - name: -=app_name=-
          secret:
            secretName: -=app_name=--secret
            items:
              - key: config.json
                path: config.json
      containers:
      - name: -=app_name=-
        image: -=docker_org=-/-=docker_repo=-:-=docker_tag=-
        volumeMounts:
        - mountPath: "/osmosis-mount/"
          name: -=app_name=-
        ports:
        - containerPort: -=container_port=-
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: -=container_port=-
          initialDelaySeconds: -=initial_delay_seconds=-
          periodSeconds: -=period_seconds=-
        envFrom:
          - secretRef:
              name: -=app_name=--secret
      imagePullSecrets:
        - name: -=image_pull_secret=-

---
apiVersion: v1
kind: Secret
metadata:
  name: -=app_name=--secret
  namespace: -=kubernetes_namespace=-
stringData:
  DEBUG: "-=debug=-"
  config.json: |
    {
        "debug": -=debug=-,
        "server": {
          "address": ":-=service_port=-"
        },
        "context":{
          "timeout":2
        },
        "database": {
            "host": "-=app_name=--redis.-=kubernetes_namespace=-",
            "port": "-=redis_port=-",
            "user": "-=redis_user=-",
            "pass": "-=redis_password=-",
            "name": "-=redis_name=-"
        },
        "chain": {
            "id": "-=chain_id=-",
            "node_uri": "-=node_rpc=-",
            "node_grpc": "-=node_grpc=-"
        }
    }


---
apiVersion: v1
kind: Secret
metadata:
  name: -=app_name=--redis-secret
  namespace: -=kubernetes_namespace=-
stringData:
  REDIS_PASSWORD: "-=redis_password=-"

---
apiVersion: v1
kind: Service
metadata:
  namespace: -=kubernetes_namespace=-
  name: -=app_name=-
spec:
  selector:
    app: -=app_name=-
  ports:
    - protocol: TCP
      port: -=service_port=-
      targetPort: -=container_port=-
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  ingressClassName: nginx
  rules:
  - host: -=domain_name=-
    http:
      paths:
      - pathType: Prefix
        path: -=path=-
        backend:
          service:
            name: -=app_name=-
            port:
              number: -=service_port=-
